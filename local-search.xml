<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>为TensorFlow预处理KDD99数据集</title>
    <link href="/2021/01/17/%E4%B8%BATensorFlow%E9%A2%84%E5%A4%84%E7%90%86KDD99%E6%95%B0%E6%8D%AE%E9%9B%86/"/>
    <url>/2021/01/17/%E4%B8%BATensorFlow%E9%A2%84%E5%A4%84%E7%90%86KDD99%E6%95%B0%E6%8D%AE%E9%9B%86/</url>
    
    <content type="html"><![CDATA[<h1 id="为TensorFlow预处理KDD99数据集"><a href="#为TensorFlow预处理KDD99数据集" class="headerlink" title="为TensorFlow预处理KDD99数据集"></a>为TensorFlow预处理KDD99数据集</h1><h2 id="一、KDD99介绍"><a href="#一、KDD99介绍" class="headerlink" title="一、KDD99介绍"></a>一、KDD99介绍</h2><p>KDD99是一个用来从正常连接中监测非正常连接的数据集。产出于1999年Thrid International Knowlegde Discovery and Data Mining Tools Competition，其目的是建立一个稳定的的入侵检测系统。</p><p>KDD99包含了置入攻击的军事网络环境中的记录。攻击可以分类为：</p><ul><li><strong>DoS攻击</strong>：Denial of Service</li><li><strong>R2U</strong>：Remote to User</li><li><strong>U2R</strong>：User to Root</li><li><strong>探针攻击</strong>：Probing</li></ul><p>KDD99数据集是 <em>DARPA数据集</em> 的 <strong>特征提取(Feature Extract)</strong> 版本（ <em>DARPA</em> 是原始数据集）KDD99对每个连接提取了 <strong>41</strong> 个特征，使用<strong>Bro-IDS</strong>工具对数据贴标签。</p><p>其41个特征可以按以下方式分类：</p><ul><li>1-9    每个TCP连接的基本特征</li><li>10-22    连接内部的内容特征，由领域内知识建议(suggested by domain konwledge)</li><li>23-31    使用2秒时间窗激素那的流量特征(Traffic features computed using a two-second time window)</li><li>32-42    主机特征(Host features)，用来评估持续时间再两秒钟以上的攻击</li></ul><table><thead><tr><th align="center">feature name</th><th>description</th><th align="center">type</th></tr></thead><tbody><tr><td align="center">duration</td><td>length (number of seconds) of the connection<br>连接的持续时间，以秒(s)为单位<br><strong>[0 ~ 58329]</strong><br>它的定义是从TCP连接以3次握手建立算起，到FIN/ACK连接结束为止的时间；若为UDP协议类型，则将每个UDP数据包作为一条连接。(数据集中出现大量的duration=0 的情况，是因为该条连接的持续时间不足1秒.)</td><td align="center">continuous<br>连续</td></tr><tr><td align="center">protocol_type</td><td>type of the protocol, e.g. tcp, udp, etc.<br>协议类型，此数据集中有三种：<br><strong>TCP, UDP, ICMP</strong></td><td align="center">discrete<br>离散</td></tr><tr><td align="center">service</td><td>network service on the destination, e.g., http, telnet, etc.<br>连接目的端的网络服务。有70+种：<br><strong>aol, auth, bgp, courier, csnet_ns, ctf, daytime, discard, domain, domain_u, echo, eco_i, ecr_i, efs, exec, finger, ftp, ftp_data, gopher, harvest, hostnames, http, http_2784, http_443, http_8001, imap4, IRC, iso_tsap, klogin, kshell, ldap, link, login, mtp, name, netbios_dgm, netbios_ns, netbios_ssn, netstat, nnsp, nntp, ntp_u, other, pm_dump, pop_2, pop_3, printer, private, red_i, remote_job, rje, shell, smtp, sql_net, ssh, sunrpc, supdup, systat, telnet, tftp_u, tim_i, time, urh_i, urp_i, uucp, uucp_path, vmnet, whois, X11, Z39_50</strong></td><td align="center">discrete<br>离散</td></tr><tr><td align="center">src_bytes</td><td>number of data bytes from source to destination<br>从源主机到目的主机数据的字节数<br><strong>[0 ~ 1379963888]</strong></td><td align="center">continuous<br>连续</td></tr><tr><td align="center">dst_bytes</td><td>number of data bytes from destination to source<br>从目的主机到源主机数据的字节数<br><strong>[0 ~ 1309937401]</strong></td><td align="center">continuous<br>连续</td></tr><tr><td align="center">flag</td><td>normal or error status of the connection<br>连接状态正常或错误的标志，共11中<br><strong>OTH, REJ, RSTO, RSTOS0, RSTR, S0, S1, S2, S3, SF, SH</strong><br>表示该连接是否按照协议要求开始或完成。例如SF表示连接正常建立并终止；S0表示只接到了SYN请求数据包，而没有后面的SYN/ACK。其中SF表示正常，其他10种都是error。<br>11种状态的详细解释，参考文章[4]</td><td align="center">discrete<br>离散</td></tr><tr><td align="center">land</td><td>1 if connection is from/to the same host/port; 0 otherwise<br> <strong>1:</strong> 连接来自/到同一主机/端口<br> <strong>0:</strong> 其它</td><td align="center">discrete<br>离散</td></tr><tr><td align="center">wrong_fragment</td><td>number of ``wrong’’ fragments<br>“错误”片段的数量<br><strong>[0 ~ 3]</strong></td><td align="center">continuous<br>连续</td></tr><tr><td align="center">urgent</td><td>number of urgent packets<br>urgent加急包数量<br><strong>[0 ~ 14]</strong></td><td align="center">continuous<br>连续</td></tr></tbody></table><center><p>Table 1: Basic features of individual TCP connections.</p><p>表1：TCP连接的基本特征</p></center><table><thead><tr><th align="center">feature name</th><th>description</th><th align="center">type</th></tr></thead><tbody><tr><td align="center">hot</td><td>number of ``hot’’ indicators<br>访问系统敏感文件和目录的次数<br><strong>[0 ~ 101]</strong><br>例如访问系统目录，建立或执行程序等</td><td align="center">continuous<br>连续</td></tr><tr><td align="center">num_failed_logins</td><td>number of failed login attempts<br>登录尝试失败的次数。<br><strong>[0 ~ 5]</strong></td><td align="center">continuous<br>连续</td></tr><tr><td align="center">logged_in</td><td>1 if successfully logged in<br>0 otherwise<br><strong>1</strong>：成功登录<br><strong>0</strong>：其它</td><td align="center">discrete<br>离散</td></tr><tr><td align="center">num_compromised</td><td>number of ``compromised’’ conditions<br>‘compromised’条件出现的次数<br><strong>[0 ~ 7479]</strong></td><td align="center">continuous<br>连续</td></tr><tr><td align="center">root_shell</td><td>1 if root shell is obtained; 0 otherwise<br><strong>1</strong>：获得root shell<br><strong>0</strong>：其它</td><td align="center">discrete<br>离散</td></tr><tr><td align="center">su_attempted</td><td>1 if ``su root’’ command attempted; 0 otherwise<br><strong>1</strong>：出现’su root’<br><strong>0</strong>：其它</td><td align="center">discrete<br>离散</td></tr><tr><td align="center">num_root</td><td>number of ``root’’ accesses<br>root用户访问次数<br><strong>[0 ~ 7468]</strong></td><td align="center">continuous<br>连续</td></tr><tr><td align="center">num_file_creations</td><td>number of file creation operations<br>文件创建操作的次数<br><strong>[0 ~ 100]</strong></td><td align="center">continuous<br>连续</td></tr><tr><td align="center">num_shells</td><td>number of shell prompts<br>使用shell命令的次数<br><strong>[0 ~ 5]</strong></td><td align="center">continuous<br>连续</td></tr><tr><td align="center">num_access_files</td><td>number of operations on access control files<br>访问控制文件的次数<br><strong>[0 ~ 9]</strong></td><td align="center">continuous<br>连续</td></tr><tr><td align="center">num_outbound_cmds</td><td>number of outbound commands in an ftp session<br>一个FTP会话种出现连接的次数<br><strong>数据集种这一特征出现次数为0</strong></td><td align="center">continuous<br>连续</td></tr><tr><td align="center">is_hot_login</td><td>1 if the login belongs to the ``hot’’ list; 0 otherwise<br><strong>1</strong>：登录属于’hot’列表<br><strong>0</strong>：其它<br>如超级用户或管理员登录</td><td align="center">discrete<br>离散</td></tr><tr><td align="center">is_guest_login</td><td>1 if the login is a ``guest’’login; 0 otherwise<br><strong>1</strong>：guest登录<br><strong>0</strong>：其它</td><td align="center">discrete<br>离散</td></tr></tbody></table><center><p>Table 2: Content features within a connection suggested by domain knowledge.</p><p>表2：TCP连接的内容特征</p></center><table><thead><tr><th align="center">feature name</th><th>description</th><th align="center">type</th></tr></thead><tbody><tr><td align="center">count</td><td>number of connections to the same host as the current connection in the past two seconds<br><strong>Note:</strong> The following  features refer to these same-host connections.<br>过去两秒内，与当前连接具有相同的目标主机的连接数。<br><strong>[0 ~ 511]</strong><br> <strong>注意：</strong> 以下特征连接到相同主机</td><td align="center">continuous<br>连续</td></tr><tr><td align="center">srv_count</td><td>number of connections to the same service as the current connection in the past two seconds<br><strong>Note:</strong> The following features refer to these same-service connections.<br>过去两秒内，与当前连接具有相同服务的连接数<br><strong>[0 ~ 511]</strong><br> <strong>注意：</strong> 以下特征连接到相同服务</td><td align="center">continuous<br>连续</td></tr><tr><td align="center">serror_rate</td><td>% of connections that have ``SYN’’ errors<br>过去两秒内，在与当前连接具有相同目标主机的连接中，出现“SYN” 错误的连接的百分比<br><strong>[0.00 ~ 1.00]</strong></td><td align="center">continuous<br>连续</td></tr><tr><td align="center">rerror_rate</td><td>% of connections that have ``REJ’’ errors<br>过去两秒内，在与当前连接具有相同目标主机的连接中，出现“REJ” 错误的连接的百分比<br><strong>[0.00 ~ 1.00]</strong></td><td align="center">continuous<br>连续</td></tr><tr><td align="center">same_srv_rate</td><td>% of connections to the same service<br>过去两秒内，在与当前连接具有相同目标主机的连接中，与当前连接具有相同服务的连接的百分比<br><strong>[0.00 ~ 1.00]</strong></td><td align="center">continuous<br>连续</td></tr><tr><td align="center">diff_srv_rate</td><td>% of connections to different services<br>过去两秒内，在与当前连接具有相同目标主机的连接中，与当前连接具有不同服务的连接的百分比<br><strong>[0.00 ~ 1.00]</strong></td><td align="center">continuous<br>连续</td></tr><tr><td align="center">srv_serror_rate</td><td>% of connections that have ``SYN’’ errors<br>过去两秒内，在与当前连接具有相同服务的连接中，出现“SYN” 错误的连接的百分比<br><strong>[0.00 ~ 1.00]</strong></td><td align="center">continuous<br>连续</td></tr><tr><td align="center">srv_rerror_rate</td><td>% of connections that have ``REJ’’ errors<br>过去两秒内，在与当前连接具有相同服务的连接中，出现“REJ” 错误的连接的百分比<br><strong>[0.00 ~ 1.00]</strong></td><td align="center">continuous<br>连续</td></tr><tr><td align="center">srv_diff_host_rate</td><td>% of connections to different hosts<br>过去两秒内，在与当前连接具有相同服务的连接中，与当前连接具有不同目标主机的连接的百分比<br><strong>[0.00 ~ 1.00]</strong></td><td align="center">continuous<br>连续</td></tr><tr><td align="center"><font size=2></td><td></td><td align="center"></td></tr></tbody></table><ul><li><p>count、serror_rate、rerror_rate、same_srv_rate、diff_srv_rate这5个特征是 same host特征，前提都是与当前连接具有相同目标主机的连接；</p></li><li><p>srv_count、srv_serror_rate、srv_rerror_rate、srv_diff_host_rate这4个特征是same service特征，前提都是与当前连接具有相同服务的连接。</p></li></ul></font><center>Table 3: Traffic features computed using a two-second time window.<p>表 3：基于时间的网络流量统计特征</p></center><table><thead><tr><th align="center">feature name</th><th>description</th><th align="center">type</th></tr></thead><tbody><tr><td align="center">dst_host_count</td><td>前100个连接中，与当前连接具有相同目标主机的连接数<br><strong>[0 ~ 255]</strong></td><td align="center">连续</td></tr><tr><td align="center">dst_host_srv_count</td><td>前100个连接中，与当前连接具有相同目标主机相同服务的连接数<br><strong>[0 ~ 255]</strong></td><td align="center">连续</td></tr><tr><td align="center">dst_host_same_srv_rate</td><td>前100个连接中，与当前连接具有相同目标主机相同服务的连接所占的百分比<br><strong>[0.00 ~ 1.00]</strong></td><td align="center">连续</td></tr><tr><td align="center">dst_host_diff_srv_rate</td><td>前100个连接中，与当前连接具有相同目标主机不同服务的连接所占的百分比<br><strong>[0.00 ~ 1.00]</strong></td><td align="center">连续</td></tr><tr><td align="center">dst_host_same_src_port_rate</td><td>前100个连接中，与当前连接具有相同目标主机相同源端口的连接所占的百分比<br><strong>[0.00 ~ 1.00]</strong></td><td align="center">连续</td></tr><tr><td align="center">dst_host_srv_diff_host_rate</td><td>前100个连接中，与当前连接具有相同目标主机相同服务的连接中，与当前连接具有不同源主机的连接所占的百分比<br><strong>[0.00 ~ 1.00]</strong></td><td align="center">连续</td></tr><tr><td align="center">dst_host_serror_rate</td><td>前100个连接中，与当前连接具有相同目标主机的连接中，出现SYN错误的连接所占的百分比<br><strong>[0.00 ~ 1.00]</strong></td><td align="center">连续</td></tr><tr><td align="center">dst_host_srv_serror_rate</td><td>前100个连接中，与当前连接具有相同目标主机相同服务的连接中，出现SYN错误的连接所占的百分比<br><strong>[0.00 ~ 1.00]</strong></td><td align="center">连续</td></tr><tr><td align="center">dst_host_rerror_rate</td><td>前100个连接中，与当前连接具有相同目标主机的连接中，出现REJ错误的连接所占的百分比<br><strong>[0.00 ~ 1.00]</strong></td><td align="center">连续</td></tr><tr><td align="center">dst_host_srv_rerror_rate</td><td>前100个连接中，与当前连接具有相同目标主机相同服务的连接中，出现REJ错误的连接所占的百分比<br><strong>[0.00 ~ 1.00]</strong></td><td align="center">连续</td></tr></tbody></table><center><p>表 4:基于主机的网络流量统计特征（<a href="http://kdd.ics.uci.edu/databases/kddcup99/task.html">KDD99官网的task部分</a>没找到对应表格）</p></center><p>KDD99在研究者当中十分流行，研究者也对其本身做了很多工作：</p><ul><li>[*]减少特征数量，从最初的41个特征中选择最有用的特征</li><li>[*]指出了KDD99的不足之处<blockquote><ol><li>KDD99面临不平衡的分类方法问题。测试集和训练集的概率分布是不同的，由于在训练集中加入新的攻击，攻击和正常流量的类别的平衡会被打破。[?]</li><li>数据集太老了，可能存在过时的问题</li><li>有研究表明，该数据集存在导致对异常检测性能的过高估计的可能性</li></ol></blockquote></li></ul><p>本段参考：<br>[1]. CHAABOUNI N, MOSBAH M, ZEMMARI A, et al. Network Intrusion Detection for IoT Security Based on Learning Techniques [J]. Ieee Communications Surveys and Tutorials, 2019, 21(3): 2671-701.<br>[2]. <a href="http://kdd.ics.uci.edu/databases/kddcup99/kddcup99.html">KDD Cup 1999 Data</a><br>[3]. <a href="https://mathpretty.com/10244.html">KDD99数据集与NSL-KDD数据集介绍</a> <em>BTW： 这篇博客对KDD99和NSL-KDD写的很详细</em><br>[4]. Song J, Takakura H, Okabe Y. Description of kyoto university benchmark data[J]. Available at link: <a href="http://www.takakura.com/Kyoto_data/BenchmarkData-Description-v5.pdf">http://www.takakura.com/Kyoto_data/BenchmarkData-Description-v5.pdf</a> [Accessed on 15 March 2016], 2006.</p><p>更多关于KDD99的文章：<br>[1]. Özgür A, Erdem H. A review of KDD99 dataset usage in intrusion detection and machine learning between 2010 and 2015[J]. PeerJ Preprints, 2016, 4: e1954v1.</p><p>[未完成：2021-01-17]</p>]]></content>
    
    
    <categories>
      
      <category>机器学习应用于信息安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>TensorFlow</tag>
      
      <tag>KDD99</tag>
      
      <tag>信息安全</tag>
      
      <tag>机器学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo的安装与配置</title>
    <link href="/2021/01/17/hexo%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
    <url>/2021/01/17/hexo%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="Hexo的安装与初始配置"><a href="#Hexo的安装与初始配置" class="headerlink" title="Hexo的安装与初始配置"></a>Hexo的安装与初始配置</h1><h2 id="一、Hexo安装准备"><a href="#一、Hexo安装准备" class="headerlink" title="一、Hexo安装准备"></a>一、Hexo安装准备</h2><p>安装Hexo的前置需求有：</p><ul><li><strong>Node.js</strong>：主要是使用其中的npm包管理工具（<a href="https://hexo.io/zh-cn/docs/">Hexo官网</a>建议使用Node.js 12.0版本，最低Node.js 10.13） </li><li><strong>Git</strong>：版本控制工具，主要用于博客的版本控制、远端存储和同步</li></ul><h2 id="二、安装Hexo"><a href="#二、安装Hexo" class="headerlink" title="二、安装Hexo"></a>二、安装Hexo</h2><p>安装好上述软件需求后，在shell终端输入以下指令，即可完成安装Hexo。</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">$ npm install -g hexo-<span class="hljs-keyword">cli</span><br></code></pre></td></tr></table></figure><p>安装过程中可能遇到的问题：</p><ol><li>安装过程缓慢或卡在某个过程中不动弹。可以考虑修改npm的默认下载源，如<strong>淘宝镜像源</strong>。</li><li>Windows可以在<strong>Git Bash</strong>中进行类似Linux中的指令。</li></ol><p>安装好hexo之后，如此使用：</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">$ npx hexo &lt;<span class="hljs-keyword">command</span>&gt;<br></code></pre></td></tr></table></figure><p>为了方便起见，我们更倾向于直接使用hexo指令</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta"># hexo <span class="hljs-meta-string">&lt;command&gt;</span></span><br></code></pre></td></tr></table></figure><ul><li>方法一：可以考虑将hexo加入PATH</li><li>方法二：设置alias hexo=’npx hexo’</li><li>方法三：(Windows系统)，使用<strong>git bash</strong>貌似可以不用设置环境PATH。但是存在一个小问题，直接运行<strong>git bash</strong>无法找到hexo指令，但从文件夹窗口中使用右键菜单<strong>在此处打开git bash</strong>可以直接使用<code>hexo &lt;command&gt;</code></li></ul><h2 id="三、初始配置"><a href="#三、初始配置" class="headerlink" title="三、初始配置"></a>三、初始配置</h2><p>自此开始，默认使用简化的形式</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">$ hero &lt;<span class="hljs-keyword">command</span>&gt;<br></code></pre></td></tr></table></figure><p>安装好Hexo之后，要初始化一个工作目录，类似于git中的</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">$ git <span class="hljs-keyword">init</span><br></code></pre></td></tr></table></figure><p>执行指令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-variable">$</span> hexo init &lt;directory&gt;<br><span class="hljs-variable">$</span> <span class="hljs-built_in">cd</span> &lt;directory&gt;<br><span class="hljs-variable">$</span> npm install<br></code></pre></td></tr></table></figure><p>逐条解析：</p><ol><li><code>hexo init &lt;directory&gt;</code>：格式化指定路径为hexo工作目录。</li></ol><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs tap">$ ll &lt;directory&gt;<br>total 116<br>-rw-r--r--<span class="hljs-number"> 1 </span><span class="hljs-number"> 197609 </span>   <span class="hljs-number"> 0 </span>  _config.landscape.yml<br>-rw-r--r--<span class="hljs-number"> 1 </span><span class="hljs-number"> 197609 </span><span class="hljs-number"> 2545 </span>  _config.yml<br>drwxr-xr-x<span class="hljs-number"> 1 </span><span class="hljs-number"> 197609 </span>   <span class="hljs-number"> 0 </span>  node_modules/<br>-rw-r--r--<span class="hljs-number"> 1 </span><span class="hljs-number"> 197609 </span> <span class="hljs-number"> 641 </span>  package.json<br>-rw-r--r--<span class="hljs-number"> 1 </span><span class="hljs-number"> 197609 </span>57736   package-lock.json<br>drwxr-xr-x<span class="hljs-number"> 1 </span><span class="hljs-number"> 197609 </span>   <span class="hljs-number"> 0 </span>  scaffolds/<br>drwxr-xr-x<span class="hljs-number"> 1 </span><span class="hljs-number"> 197609 </span>   <span class="hljs-number"> 0 </span>  source/<br>drwxr-xr-x<span class="hljs-number"> 1 </span><span class="hljs-number"> 197609 </span>   <span class="hljs-number"> 0 </span>  themes/<br></code></pre></td></tr></table></figure><ol start="2"><li><code>cd &lt;directory&gt;</code>：切换到工作目录</li><li><code>npm install</code>：使用<code>npm</code>根据<code>&lt;directory&gt;</code>中的配置文件下载相关的依赖文件。</li></ol><h2 id="四、个性化设置"><a href="#四、个性化设置" class="headerlink" title="四、个性化设置"></a>四、个性化设置</h2><p>关于hexo博客的个性化设置，离不开<code>&lt;hexo&gt;/_config.yml</code></p><h3 id="1、设置博客标题、基本信息等"><a href="#1、设置博客标题、基本信息等" class="headerlink" title="1、设置博客标题、基本信息等"></a>1、设置博客标题、基本信息等</h3><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs makefile">$ vim _config.yml<br>...<br><span class="hljs-comment"># Site</span><br><span class="hljs-section">title: 设置博客标题</span><br><span class="hljs-section">subtitle: &#x27;&#x27;</span><br><span class="hljs-section">description: &#x27;&#x27;</span><br><span class="hljs-section">keywords:</span><br><span class="hljs-section">author: 作者姓名</span><br><span class="hljs-section">language: 语言，中文设置为zh即可</span><br><span class="hljs-section">timezone: 国内一般使用Asia/Shanghai即可</span><br>...<br></code></pre></td></tr></table></figure><p>此处抛砖引玉，更多相关设置使用时实时查阅即可</p><h3 id="2、设置博客主题-theme"><a href="#2、设置博客主题-theme" class="headerlink" title="2、设置博客主题(theme)"></a>2、设置博客主题(theme)</h3><p><a href="https://hexo.io/zh-cn/">Hexo官网</a>共享了很多主题。</p><p><img src="https://gitee.com/songz7026/image-pool/raw/master/note_hexo/hexo_theme.png" alt="Hexo官网主题"></p><p>任选一款进入，即可找到作者的github主页连接，在其中寻找hexo的主题仓库即可，一般在readme中都会详细介绍主题的安装方法。不过一般来说都是一样的。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">cd</span> &lt;directory&gt;</span><br><span class="hljs-meta">$</span><span class="bash"> git <span class="hljs-built_in">clone</span> &lt;github_theme仓库的连接&gt;</span><br></code></pre></td></tr></table></figure><p>在此之后修改<code>_config.yml</code>中的<code>theme</code>即可</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs clean"># Extensions<br>## Plugins: https:<span class="hljs-comment">//hexo.io/plugins/</span><br>## Themes: https:<span class="hljs-comment">//hexo.io/themes/</span><br>theme: 这里这里这里 theme名称填上去就可以了<br></code></pre></td></tr></table></figure><p>个别theme会有自己的安装方法，按照readme详细做就可以了。</p><h2 id="五、查看博客"><a href="#五、查看博客" class="headerlink" title="五、查看博客"></a>五、查看博客</h2><p>在shell中键入以下指令即可开启本地服务，从本地浏览器输入对应连接(下文对应链接为localhost:4000)即可查看</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">$ hexo <span class="hljs-keyword">server</span><br><span class="hljs-keyword">INFO</span>  Validating config<br><span class="hljs-keyword">INFO</span>  <span class="hljs-keyword">Start</span> processing<br><span class="hljs-keyword">INFO</span>  Hexo <span class="hljs-keyword">is</span> running at http://localhost:<span class="hljs-number">4000</span> . Press Ctrl+C <span class="hljs-keyword">to</span> stop.<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/songz7026/image-pool/raw/master/note_hexo/hexo_init_blog.png" alt="初始状态博客首页"></p><p>使用<code>-o</code>选项可以自动使用系统默认浏览器打开</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta">$ hexo <span class="hljs-keyword">server</span> -o<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/01/15/hello-world/"/>
    <url>/2021/01/15/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
